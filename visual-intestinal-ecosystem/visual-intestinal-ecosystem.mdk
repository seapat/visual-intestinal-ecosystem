[INCLUDE=presentation]
Title         : Visualization of microbial ecosystems
Sub Title     : At the example of human intestinal data
Author        : Mario Rauh, Antonia Schuster, Sean Klein, Florian Kellner
Affiliation   : BioVis 2020/21
Email         : 
Reveal Theme  : sky
Beamer Theme  : singapore

[TITLE]

# Overview

[TOC]

# Introduction

[//]: # (Mario)

* Given: 2 datasets
  * Metadata: Contains sample's metadata information
  * Ecosystem: For each sample the microbial composition
* Goal: Find a connection between metadata and ecosystem

# Metadata

* Consists of several attributes:
  * Age group, BMI group, diversity group, Nationality and DNA Extraction method
* Can be visualized using different methods
  * Stacked Bar Chart

# Ecosystem

* For each sample:
  * Provide the relative abundance of each bacterium
* Visualized, using a combination of:
  * Wheel
  * Heatmap
* Connection to Metadata:
  * Density Map for each bacterium

# Stacked Bar Chart

[//]: # (Sean)

- Purpose
  - Give an Overview of Metadata
  - Easy and quick to analyze 
  - Visualize distributions of data
  [//]: # (no Practice required for reading)

- How
  - Custom Sort order:  Age, Diversity, Obesity
[//]: # (Age & Diversity are grouped, Obesity -> categorical: implicit order)
[//]: # (keyOrder = 1D array)
  - Occurrences per bar:
  
  ```javascript
  d3.groups(dataset
    .filter(x => x[colorAttr] != null), f => f[colorAttr])
    .map(g => g[0])
    .sort((a, b) =>  KeyOrder.indexOf(a) > -1 ? KeyOrder.indexOf(a)-KeyOrder.indexOf(b) : d3.ascending(a, b)) 
  ```

# Stacked Bar Chart

![StackedBarchart] 

[StackedBarchart]: images/StackedBarchart.png "StackedBarchart" { width:auto; max-width:90% }

# Stacked Bar Chart

hide unnecessary legend & colors

![StackedBarchart2]

[StackedBarchart2]: images/StackedBarchart2.png "StackedBarchart2" { width:auto; max-width:90% }

# Heatmap

Florian

* Berechnung
* Skalierbare SVGs
* Warum Heatmap, warum Circle? (ursprüngliche Idee: Bäume)
* Idee: Rad drehen, ist aber schwierig mit der Orientierung

# Distribution of original data
* Processed data in order to highlight differences
* How can we show the original data?

# Kernel Density Estimation
~ Begin Framed { padding:1ex; margin-top:1ex }
~ Math  {#density}
\hat{f}(x) = \frac{1}{n}\sum_{i=1}^{n}K(x, x_i)
~
~ End Framed
<br>
RBF-Kernel:
~ Begin Framed { padding:1ex; margin-top:1ex }
~ Math  {#gaussian-kernel}
K(x, x') = e^{-\frac{(x-x')^2}{2\sigma^2}} 
~
~ Math
\sigma = 0.05
~
~ End Framed

# Histograms
* Antonia
* Gausskernel
* Demo
* Verbindung Heatmap/Histogramme

# Using custom data

* Upload Button:
  * Gives user the chance to upload own data
  * 2 files necessary:
    * Metadata file
    * Ecosystem file
  * Same format required
    * Format checking included
  * Dynamic
    * Press *Upload* Button to show
    * Press *Cancel* to collapse

# Madoko Presentation

Using [Madoko] it is easy to create beautiful presentations.

* [Html][slide]:
  Uses the `Reveal.js` library by [Hakim El Hattab](http://hakim.se).\
  This slide demo in Madoko is an adaption of his online demo.
* [Pdf][slide-pdf]:
  Uses the `Beamer` package for LaTeX
* [Source][slide-mdk]:
  Click to see the source of this presentation.


[madoko]: http://madoko.codeplex.com

## Reveal.js

`reveal.js` is a framework for easily creating beautiful presentations using
HTML. You'll need a browser with support for CSS 3D transforms to see it in
its full glory. 

And any Madoko features just work. Here is some math:

~ Begin Framed { padding:1ex; margin-top:1ex }
A famous equation is $e = mc^2$, but this one is 
famous too:

~ Equation  {#eq-gaussian}
\int_{-\infty}^\infty e^{-a x^2} d x = \sqrt{\frac{\pi}{a}} 
~
~ End Framed

~~ Notes
Oh hey, these are some notes. They'll be hidden in your presentation, but you
can see them if you open the speaker notes window (hit 's' on your keyboard).
~~

## Code

Here is code, highlighted by Madoko 

``` javascript
function sqr( x ) {
  var \(&pi;\) = 3.141593;
  return x*x;  /* the square */
}
```
We used `\(` and `\)` to escape into markdown to write &pi;.

<!-- Example of nested vertical slides -->
~ Begin Vertical { data-background:Gainsboro }

## Vertical Slides {#vertical}
Slides can be nested inside of other slides,
try pressing [down].

[![arrowdown]][down]


[down]: # { .navigate-down }
[arrowdown]: images/arrow.png "Down arrow" { width:178px; height:238px }

## Basement Level 1
Press down or up to navigate.

## Basement Level 2

Use `columns` to put blocks next to each other:

~ Begin Columns
~ Column { width:50% }
A monarch butterfly (shown to the right)
spends the winter in Mexico.
~
~ Column
![butterfly]
~
~ End Columns

[butterfly]: images/butterfly.png "A Monarch butterfly" { width:280px; vertical-align:middle }


<!-- 
For local background images, we need to have a reference to the image
such that it's data gets embedded into the HTML page. We define
it using "display=none" so it is hidden in the presentation. 
We can then refer to the image in "data-background-image". 
-->

![bfly]
[bfly]: images/butterfly.png "Butterfly" { display:none }

## Basement Level 3 { data-background-image:images/butterfly.png }
That's it, time to go back up.

[![arrowup]][back2]

[arrowup]:  images/arrow.png "Up arrow" { width:178px; height:238px; transform:rotate(180deg) }
[back2]:    #vertical { .image }

~ End Vertical


## Themes {#themes}

Reveal.js comes with a few themes built in:

* [Default](?#/themes)
* [Sky](?theme=sky#/themes)
* [Beige](?theme=beige#/themes)
* [Serif](?theme=serif#/themes)
* [Simple](?theme=simple#/themes)
* [Night](?theme=night#/themes)
* [Moon](?theme=moon#/themes)
* [Solarized](?theme=solarized#/themes)

Theme demos are loaded after the presentation which leads to flicker. In
production you should load your theme in the `<head>` using a
`<link>`.

## Transitions { #transitions }

You can select from different transitions, like:\
[Cube](?transition=cube#/transitions) -
[Page](?transition=page#/transitions) -
[Concave](?transition=concave#/transitions) -
[Zoom](?transition=zoom#/transitions) -
[Linear](?transition=linear#/transitions) -
[Fade](?transition=fade#/transitions) -
[None](?transition=none#/transitions) -
[Default](?#/transitions)



## Pauses?

Some pauses.

* {.fragment} One
* {.fragment} Two
* {.fragment} Three

And more:

- Test 1
- Test 2
- Test 3
{.fragmented}

Cool!.

~ Slide
A slide with no header
~


## Point of View

In Reveal.js Press **ESC** to enter the slide overview.

Hold down alt and click on any element to zoom in on it using 
 [zoom.js]. Alt + click anywhere to zoom back out.


[zoom.js]: http://lab.hakim.se/zoom-js


## Works in Mobile Safari

Try it out! You can swipe through the slides and pinch your way to the
overview.


## Printing

You can print a `revealjs` presentation nicely from the browser.

First give the `?print-pdf` or `?print-paper` query on your final
presentation (in the browser address bar) and then print from the Chrome
browser selecting `Save to PDF`.

Read more about it at the [revealjs documentation](https://github.com/hakimel/reveal.js#pdf-export)

## RevealJS library

Normally, the `revealjs` library is loaded from a CDN but you can specify your
own url using metadata:

    Reveal Url: <my url>

This can be useful when using a [server to run revealjs](https://github.com/hakimel/reveal.js#full-setup)
where you may use something like:

    @nopreview Reveal Url: http://localhost:8000/reveal.js


## Thanks for looking :-)

[slide]: http://research.microsoft.com/en-us/um/people/daan/madoko/samples/slidedemo/out/slidedemo.html
[slide-mdk]: https://www.madoko.net/editor.html?#url=http://research.microsoft.com/en-us/um/people/daan/madoko/samples/slidedemo/slidedemo.mdk&options={"delayedUpdate":"true"}
[slide-pdf]: http://research.microsoft.com/en-us/um/people/daan/madoko/samples/slidedemo/out/slidedemo.pdf
