[INCLUDE=presentation]
Title         : Visualization of microbial ecosystems
Sub Title     : At the example of human intestinal data
Author        : Mario Rauh, Antonia Schuster, Sean Klein, Florian Kellner
Affiliation   : BioVis 2020/21
Email         : 
Reveal Theme  : sky
Beamer Theme  : singapore

[TITLE]

# Overview

[TOC]

# Introduction
### Mario

[//]: # (Mario)

* Given: 2 datasets
  * Metadata: Contains sample's metadata information
  * Ecosystem: For each sample the microbial composition
* Goal: Find a connection between metadata and ecosystem

# Metadata
### Mario

* Consists of several attributes:
  * Age group, BMI group, diversity group, Nationality and DNA Extraction method
* Can be visualized using different methods
  * Stacked Bar Chart

# Ecosystem
### Mario

* For each sample:
  * Provide the relative abundance of each bacterium
* Visualized, using a combination of:
  * Wheel
  * Heatmap
* Connection to Metadata:
  * Density Map for each bacterium

# Stacked Bar Chart
### Sean

[//]: # (Sean)

- Purpose
  - Give an Overview of Metadata
  - Easy and quick to analyze 
  - Visualize distributions of data
  [//]: # (no Practice required for reading)

- How
  - Custom Sort order:  Age, Diversity, Obesity
[//]: # (Age & Diversity are grouped, Obesity -> categorical: implicit order)
[//]: # (keyOrder = 1D array)
  - Occurrences per bar:
  
  ```javascript
  d3.groups(dataset
    .filter(x => x[colorAttr] != null), f => f[colorAttr])
    .map(g => g[0])
    .sort((a, b) =>  KeyOrder.indexOf(a) > -1 ? 
      KeyOrder.indexOf(a)-KeyOrder.indexOf(b) : d3.ascending(a, b)) 
  ```

# Stacked Bar Chart
### Sean

![StackedBarchart] 

[StackedBarchart]: images/StackedBarchart.png "StackedBarchart" { width:auto; max-width:90% }

# Stacked Bar Chart
### Sean

* hide unnecessary legend & colors

![StackedBarchart2]

[StackedBarchart2]: images/StackedBarchart2.png "StackedBarchart2" { width:auto; max-width:90% }

# Heatmap
### Florian

- Purpose: 
  - Overview over all Species
  - Show interesting Species-Metadata-Groupings

<!-- # Heatmap 
### Florian

![heat_wheel]

[heat_wheel]: images/heat_wheel.gif "heat_wheel" { width:auto; max-width:50% } -->

# Heatmap - CSS Tricks
### Florian

![heat_wheel_species_bold]

[heat_wheel_species_bold]: images/heat_wheel_species_bold.gif "heat_wheel_species_bold" { width:auto; max-width:90% } 
```html
  <g class="species_group" ...>
    <text class="species_label" ...>...</text>
    <path class="heatmap_tile" .../>
    <path class="heatmap_tile" .../>
    ...
  </g>
```


```
.species_label:hover ~ .heatmap_tile {
  stroke: black;
}
.species_group:hover > .species_label {
  font-weight: bold;
}
```

# Heatmap - Reload animation
### Florian

<!-- ~ Begin Columns
~ Column { width:60% } -->
```javascript
  // paint graph
  bacteria_angles.map((d, idx) => {
    // ...
    // paint heatmap tiles for species
    group.categories.map(cat => {
      window.setTimeout(
        () => {
          // paint sector
        },
        idx * 5
      );
    });
    
  });
```
<!--  ~
~ Column
![heat_wheel_reload]
~
~ End Columns -->


[heat_wheel_reload]: images/heat_wheel_reload.gif "heat_wheel_reload" { width:auto; max-width:100%; vertical-align:middle }

# Scalable SVGs
### Florian

```javascript
// o ---> y
// |
// |
// v x

// prepare svg element
const svg = d3.select('#heat_wheel')
  .attr('style', `width: 100%; max-width: ${HEATMAP_WIDTH}px;`)
  // .attr('height', HEATMAP_HEIGHT) <-- height is not needed!
  .attr('viewBox', `0 0 ${HEATMAP_WIDTH} ${HEATMAP_HEIGHT}`)
  //        min Y --^ ^-- min X  ^-- max Y        ^-- max X
```



~~ Notes
Florian

* Berechnung
* Skalierbare SVGs
* Warum Heatmap, warum Circle? (ursprüngliche Idee: Bäume)
* Idee: Rad drehen, ist aber schwierig mit der Orientierung
~~



# Distribution of original data
### Antonia
* Processed data in order to highlight differences
* How can we show the original data?

# Kernel Density Estimation
### Antonia
~ Begin Framed { padding:1ex; margin-top:1ex }
~ Math  {#density}
\hat{f}(x) = \frac{1}{n}\sum_{i=1}^{n}K(x, x_i)
~
~ End Framed
<br>
RBF-Kernel:
~ Begin Framed { padding:1ex; margin-top:1ex }
~ Math  {#gaussian-kernel}
K(x, x') = e^{-\frac{(x-x')^2}{2\sigma^2}} 
~
~ Math
\sigma = 0.05
~
~ End Framed

# Using custom data
### Mario

* Upload Button:
  * Gives user the chance to upload own data
  * 2 files necessary:
    * Metadata file
    * Ecosystem file
  * Same format required
    * Format checking included
  * Dynamic
    * Press *Upload* Button to show
    * Press *Cancel* to collapse
